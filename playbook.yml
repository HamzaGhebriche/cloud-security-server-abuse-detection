- name: Configure EC2 instance
  hosts: web
  become: yes
  tasks:

    - name: Update all packages
      apt:
        update_cache: yes
        upgrade: yes

    - name: Install Apache, MySQL, PHP, and related packages
      apt:
        name:
          - apache2
          - mariadb-server
          - php
          - php-mysql
        state: present

    - name: Enable and start Apache
      service:
        name: apache2
        state: started
        enabled: true

    - name: Create static test page
      copy:
        dest: /var/www/html/index.html
        content: "<h1>Test Page from Ansible</h1>"

    - name: Install Fail2Ban
      apt:
        name: fail2ban
        state: present

    - name: Enable and start Fail2Ban
      service:
        name: fail2ban
        state: started
        enabled: true

    - name: Add Prometheus user
      user:
        name: prometheus
        shell: /sbin/nologin

    - name: Download and install Prometheus
      shell: |
        cd /tmp
        wget https://github.com/prometheus/prometheus/releases/download/v2.51.1/prometheus-2.51.1.linux-amd64.tar.gz
        tar xvf prometheus-2.51.1.linux-amd64.tar.gz
        cp prometheus-2.51.1.linux-amd64/prometheus /usr/local/bin/
        cp prometheus-2.51.1.linux-amd64/promtool /usr/local/bin/
        mkdir -p /etc/prometheus /var/lib/prometheus
        cp -r prometheus-2.51.1.linux-amd64/consoles /etc/prometheus
        cp -r prometheus-2.51.1.linux-amd64/console_libraries /etc/prometheus
        cp prometheus-2.51.1.linux-amd64/prometheus.yml /etc/prometheus/
      args:
        executable: /bin/bash

    - name: Create Prometheus systemd service
      copy:
        dest: /etc/systemd/system/prometheus.service
        content: |
          [Unit]
          Description=Prometheus
          Wants=network-online.target
          After=network-online.target

          [Service]
          User=prometheus
          Group=prometheus
          Type=simple
          ExecStart=/usr/local/bin/prometheus \
            --config.file /etc/prometheus/prometheus.yml \
            --storage.tsdb.path /var/lib/prometheus \
            --web.console.templates=/etc/prometheus/consoles \
            --web.console.libraries=/etc/prometheus/console_libraries

          [Install]
          WantedBy=multi-user.target

    - name: Reload systemd and start Prometheus
      systemd:
        daemon_reload: yes
        name: prometheus
        enabled: yes
        state: started

    - name: Install required packages for Grafana
      apt:
        name:
          - apt-transport-https
          - software-properties-common
          - wget
        state: present

    - name: Add Grafana APT key
      apt_key:
        url: https://packages.grafana.com/gpg.key
        state: present

    - name: Add Grafana APT repository
      apt_repository:
        repo: "deb https://packages.grafana.com/oss/deb stable main"
        state: present

    - name: Install Grafana
      apt:
        name: grafana
        state: present
        update_cache: yes

    - name: Enable and start Grafana
      systemd:
        name: grafana-server
        enabled: yes
        state: started

    - name: Copy Python script to remote host
      copy:
        src: ./monitor.py
        dest: /home/kali/Downloads/infra/ansible/monitor.py
        mode: '0755'
        owner: ubuntu
        group: ubuntu

    - name: Ensure cron job exists
      cron:
        name: "Run monitor script every minute"
        user: ubuntu
        minute: "*"
        job: "/usr/bin/python3 /home/kali/Downloads/infra/ansible/monitor.py >> /home/kali/Downloads/infra/ansible/monitor.log 2>&1"

    - name: Install Rootkit Hunter
      apt:
        name: rkhunter
        state: present

    - name: Run Rootkit Hunter check
      command: rkhunter --check --sk

    - name: Install ClamAV Antivirus
      apt:
        name: clamav
        state: present

    - name: Update ClamAV virus database
      command: freshclam

    - name: Install auditd for system auditing
      apt:
        name: auditd
        state: present

    - name: Enable and start auditd
      systemd:
        name: auditd
        enabled: yes
        state: started
